<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">
        <!--
            配置bean
            class: bean的全类名，通过反射的方式在IOC容器中创建Bean所以要求Bean中必须有无参数的构造器
            id: 表示容器中的bean.id唯一
            构造方法注入construct-arg
        -->
        <bean id="helloWorld" class="com.tutor.Helloworld">
            <!--属性注入是通过setter方法来进行注入-->
            <property name="message" value="Hello world"></property>
        </bean>
    <!--通过构造方法来配置bean的属性-->
    <bean id="car" class="com.tutor.Car">
        <constructor-arg value="Audi"></constructor-arg>
        <constructor-arg value="ShangHai"></constructor-arg>
        <constructor-arg value="300000"></constructor-arg>
    </bean>
    <bean id="car1" class="com.tutor.Car">
        <constructor-arg value="Audi"></constructor-arg>
        <constructor-arg value="ShangHai"></constructor-arg>
        <constructor-arg value="300000"></constructor-arg>
    </bean>

    <bean id="person" class="com.tutor.Person">
        <!--property是通过setter方法来赋值，要求类中含有无参构造器-->
        <property name="name" value="Tom"></property>
        <property name="age" value="24"></property>
        <!--可以使用ref属性来建立类对象之间的引用关系-->
        <!--<property name="car" ref="car"></property>-->
        <!--<property name="car" >-->
            <!--<ref bean="car"></ref>-->
        <!--</property>-->
        <!--内部bean,不能够被外部引用-->
        <property name="car">
            <bean class="com.tutor.Car">
                <constructor-arg value="Ford"></constructor-arg>
                <constructor-arg value="ChangAn"></constructor-arg>
                <constructor-arg value="200000"></constructor-arg>
            </bean>
        </property>
    </bean>
    <bean id="person2" class="com.tutor.Person">
        <!--通过构造方法来赋值-->
        <constructor-arg value="Jerry"></constructor-arg>
        <constructor-arg value="28"></constructor-arg>
        <!--<constructor-arg ref="car"></constructor-arg>-->
        <!--测试赋值null-->
        <!--<constructor-arg><null></null></constructor-arg>-->
        <!--级联属性:属性要先初始化后才可以为级联属性赋值，否则会有异常-->
        <constructor-arg ref="car"></constructor-arg>
        <property name="car.maxspeed" value="250"></property>
    </bean>
    <bean id="person3" class="collections.Person">
        <property name="name" value="Henry"></property>
        <property name="age" value="29"></property>
        <!--使用list节点为list属性赋值-->
        <property name="cars">
            <util:list>
                <ref bean="car"></ref>
                <ref bean="car1"></ref>
                <bean class="com.tutor.Car">
                    <constructor-arg value="Ford"></constructor-arg>
                    <constructor-arg value="ChangAn"></constructor-arg>
                    <constructor-arg value="200000"></constructor-arg>
                </bean>
            </util:list>
        </property>
    </bean>
    <bean id="person4" class="collections.NewPerson">
        <property name="name" value="Rose"/>
        <property name="age" value="28" />
        <!--使用map节点及map的子节点配置map类型的成员变量-->
        <property name="cars">
            <map>
                <entry key="AA" value-ref="car1"/>
                <entry key="BB" value-ref="car" />
            </map>
        </property>
    </bean>
    <!--配置单例的集合bean，以供多个bean进行引用，需要导入bean命名空间-->
    <util:list id="cars">
        <ref bean="car"/>
        <ref bean="car1"/>
    </util:list>
    <bean id="person5" class="collections.Person">
        <property name="name" value="Jack"></property>
        <property name="age" value="25"/>
        <property name="cars" ref="cars"/>
    </bean>
    <bean id="dataSource" class="collections.DataSource">
        <property name="properties">
            <props>
                <prop key="user">root</prop>
                <prop key="password">1234</prop>
                <prop key="jdbcUrl">jdbc:mysql:///test</prop>
                <prop key="user">com.mysql.jdbc.Driver</prop>
            </props>
        </property>
    </bean>
    <!--自动装配的两种方式：-->
    <!--1.byName-->
    <!--2.byType-->
</beans>